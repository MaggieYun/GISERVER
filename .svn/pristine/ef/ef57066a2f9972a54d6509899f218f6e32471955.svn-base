#coding=utf-8
#author 许照云
import os,sys
from validation import *
from layer import *
from layerfactory import *

#以下代码逻辑有待调整，layerFactory作用未发挥

import tornado.web


class queryHandler(tornado.web.RequestHandler):
    
    def initialize(self,layersPath,layerPath):
        self.layersPath = layersPath
        self.layerPath = layerPath

    def get(self):
        print u"获取参数"
        queryParameter = QueryParameter.create(self)

        layerFactory = LayerFactory(self.layersPath)

        layer1 = layerFactory.createLayer(self.layerPath)


        format = self.get_argument('format','GEOJSON')
        print format

        queryResult = layer1.query(queryParameter,format)

        #返回数据是json和geojson的区别
        try:
            result = queryResult.toString()
        except:
            result = str(queryResult)

        callback = self.get_argument('callback',None)

        if callback is None:
            self.write(result)
        else:
            self.write('%s(%s)'%(callback,result))

    post = get  


class exportHandler(tornado.web.RequestHandler):
    
    def initialize(self,layersPath,layerPath):
        self.layersPath = layersPath
        self.layerPath = layerPath

    def get(self):
        print u"获取参数"
        size = map(lambda x:int(x),self.get_argument("size").split(","))
        queryParameter = QueryParameter.create(self)

        layerFactory = LayerFactory(self.layersPath)
        layer1 = layerFactory.createLayer(self.layerPath)

        im=layer1.export(queryParameter,size)

        imstr = im.tostring("png")
        self.set_header("Content-Type", "image/png")
        self.write(imstr)

    post = get  

# class bufferHandler(tornado.web.RequestHandler):
    
#     def initialize(self,layersPath,layerPath,outfields):
#         # self.layersPath = layersPath
#         # self.layerPath = layerPath
#         # self.outfields = outfields

#     def get(self):
#         print u"获取参数"
       
#     post = get  


















